""""
    predict(m, x; link)

    Use a fit maxnet model to predict

# Arguments
- `m`: a MaxnetModel generated by maxnet()
- `x`: a Tables.jl-compatible table of predictors. All columns that were used to fit `m` should be present in `x`

# Keywords
- `link`: the link function used. Defaults to CloglogLink(), which is the default on Maxent since version 4.X.
    An alternative is LogitLink(), which was the Maxent default on earlier versions
- `clamp`: If `true`, clamp to limit the predictors to the range the model was trained on. Defaults to `false`.

# Returns
A `Vector` of 

"""

function predict(m::MaxnetModel, x; link = CloglogLink(), clamp = false)
    predictors = Tables.columntable(x)
    for k in keys(predictors)
        k in keys(m.predictor_data) || error("$k is not found in the predictors")
    end

    # clamp the predictors
    if clamp
        for k in m.continuous_predictors
            predictors[k] .= Base.clamp.(predictors[k], extrema(m.predictor_data[k])...)
        end
    end

    # build the model matrix, but only the columns that have non-0 coefficients
    mm = _model_matrix(predictors, m.columns[m.coefs.nzind])

    exponent = mm * m.coefs.nzval .+ m.alpha .+ m.entropy

    GLM.linkinv.(Ref(link), exponent)
end

selected_features(m::MaxnetModel) = m.columns[m.coefs.nzind]